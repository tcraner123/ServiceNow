<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sc_task</collection>
        <condition/>
        <description/>
        <execute_function>true</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>xMatters request events insert</name>
        <order>999</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[function onAfter(current, previous) {
	gs.include("xMattersLogger");
	gs.include("xMattersRequest2");

	appPrefix = gs.getCurrentScopeName();
	var log = new xMattersLogger(gs.getProperty(appPrefix + '.' + "xmatters.logging.level"));

	log.debug("xMatters Request Insert - State: " + current.state);
	
	if ((current.assigned_to.getDisplayValue() != gs.getUserDisplayName()) && current.state <= 2){
		
		var json = new global.JSON();
		
		var parms = {
			"terminate": false,
			"sendEvent": true,
			"triggerRule": "Assignment",
			"userName": gs.getUserName()
		};
		
		log.debug("Assigned to: " + current.assigned_to.getDisplayValue());
		log.debug("Queuing event from request insert business rule");
		gs.eventQueue( getEventName( current.number, "x_xma_xmatters.request.action" ), current, json.encode( parms ), 'requestInsert' );
		
	}
}


function getEventName( number, eventBase ) {
	
	number = new String( number );
	var last = number.slice( number.length-1 );
	
	map = {
		"0": "A", "1": "A",
		"2": "A", "3": "B",
		"4": "B", "5": "B",
		"6": "C", "7": "C",
		"8": "C", "9": "C"
	};
	
	return eventBase + '.' + map[ last ];
}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>kakey</sys_created_by>
        <sys_created_on>2016-03-31 00:17:28</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d9e803684faa5200f5f3d49f0310c7c1</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>xMatters request events insert</sys_name>
        <sys_overrides/>
        <sys_package display_value="xMatters" source="x_xma_xmatters">5950d7444f2231000e9fa88ca310c78c</sys_package>
        <sys_policy/>
        <sys_scope display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</sys_scope>
        <sys_update_name>sys_script_d9e803684faa5200f5f3d49f0310c7c1</sys_update_name>
        <sys_updated_by>tcrane</sys_updated_by>
        <sys_updated_on>2018-11-08 03:53:51</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d9e803684faa5200f5f3d49f0310c7c1"/>
</record_update>
