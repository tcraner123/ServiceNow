<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sys_group_has_role</collection>
        <condition>(new xMattersConfig()).SYNC_DYNAMICALLY &amp;&amp; (new xMattersGroup()).isSyncRequired(null, null, current)</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>xMatters Group Role Sync</name>
        <order>40</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
    var config = new xMattersConfig();
    var log = new xMattersLogger(config.DEBUGGING, 'xMatters Group Role Sync BR');
    var dataHelper = new xMattersDataHelper(config, log.getLogTraceId());

    var timer = log.timer();
    log.debug('Starting Business Rule (operation: ' + current.operation() + ')');
    try {
        var groupRec = new GlideRecord('sys_user_group');
        groupRec.addQuery('sys_id', current.group);
        groupRec.query();

        if (!groupRec.next()) {
            log.debug('No group found on current');
            return;
        }
        var groupName = groupRec.name.getDisplayValue();

        var currentGroup = null, previousGroup = null;
        var xmgroup = new xMattersGroup(config, dataHelper, log.getLogTraceId());

        var action;
        if (xmgroup.isRemoveRequired(currentGroup, previousGroup, current, previous)) {
            log.debug('Removing group: "' + groupName + '" and membership');
            action = 'delete';
            xmgroup.removeGroupAsync(groupRec, null, true);
        } else {
            log.debug('Syncing group: "' + groupName + '" and membership');
            action = 'sync';
            xmgroup.syncGroupAsync(groupRec, null, true);
        }

        log.info('Business Rule finished for group: "' + groupName +
            '" action: "' + action +
            '" (' + log.timer(timer) + 'ms elapsed)');

    } catch (e) {
        log.logException('', e);
        throw e;
    }
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2016-05-10 21:02:48</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>848621b54f9fd2008472a88ca310c771</sys_id>
        <sys_mod_count>13</sys_mod_count>
        <sys_name>xMatters Group Role Sync</sys_name>
        <sys_overrides/>
        <sys_package display_value="xMatters" source="x_xma_xmatters">5950d7444f2231000e9fa88ca310c78c</sys_package>
        <sys_policy/>
        <sys_scope display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</sys_scope>
        <sys_update_name>sys_script_848621b54f9fd2008472a88ca310c771</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-08-18 21:30:17</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=848621b54f9fd2008472a88ca310c771"/>
</record_update>
